name: Custom Build
on:
  workflow_dispatch:
    inputs:
      arch:
        type: choice
        description: Architecture of WSA.
        required: true
        options: [x64, arm64, both]
        default: both
      release-type:
        type: choice
        description: Release type of WSA. RP means Release Preview, WIS means Insider Slow, WIF means Insider Fas
        required: true
        options: ["retail","RP","WIS","WIF"]
        default: "retail"
      magisk-ver:
        type: choice
        description: Magisk version.
        required: true
        options: ["stable","beta","canary","debug"]
        default: "stable"
      gapps-brand:
        type: choice
        description: GApps brand. none for no integration of GApps
        required: true
        options: ["OpenGApps","MindTheGapps","none"]
        default: "MindTheGapps"
      gapps-variant:
        type: choice
        description: GApps variant.
        required: true
        options: ["super","stock","full","mini","micro","nano","pico","tvstock","tvmini"]
        default: "pico"
      root-sol:
        type: choice
        description: Root solution. none means no root.
        required: true
        options: ["magisk","none"]
        default: "magisk"
      compress-format:
        type: choice
        description: Compress format.
        required: true
        options: ["zip","7z","xz"]
        default: "7z"

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate build matrix
        id: set-matrix
        uses: actions/github-script@v6
        with:
          script: |
            let matrix = {};
            let arch = "${{ github.event.inputs.arch }}"
            switch ( arch ) {
              case "x64":
                matrix.arch = ["x64"];
                break;
              case "arm64":
                matrix.arch = ["arm64"];
                break;
              default:
                matrix.arch = ["x64", "arm64"];
                break;
            }
            core.setOutput("matrix",JSON.stringify(matrix));

  custbuild:
    name: Build WSA
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
      - name: Checkout ♻️
        uses: actions/checkout@v3
      - name: Install Dependencies 🧑‍🏭
        run: |
          sudo apt-get update -y
          sudo apt-get install -y whiptail setools lzip wine patchelf e2fsprogs python3-pip aria2 p7zip-full attr xz-utils unzip cabextract
          sudo wget -P /usr/local/bin/ https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
          sudo chmod +x /usr/local/bin/winetricks
          wget -P /home/runner/.cache/winetricks/msxml6/ https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/${GITHUB_REF_NAME}/wine/.cache/winetricks/msxml6/msxml6-KB973686-enu-amd64.exe
          pip list --disable-pip-version-check | grep -E "^requests " >/dev/null 2>&1 || python3 -m pip install requests
          winetricks list-installed | grep -E "^msxml6" >/dev/null 2>&1 || winetricks msxml6 || abort

      - name: Grant exec permission to script 👑
        run: chmod +x ./scripts/build.sh
    
      - name: Build WSA 🏗️
        id: wsa
        run: ./scripts/build.sh --arch ${{ matrix.arch }} --release-type ${{ inputs.release-type }} --magisk-ver ${{ inputs.magisk-ver }} --gapps-brand ${{ inputs.gapps-brand }} --gapps-variant ${{ inputs.gapps-variant }} --root-sol ${{ inputs.root-sol }} --remove-amazon --compress-format ${{ inputs.compress-format }}

      - name: Upload Artifact 🤌
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.wsa.outputs.artifact }}
          path: ./output
